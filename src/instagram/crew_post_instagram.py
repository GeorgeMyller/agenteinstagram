from crewai import Agent, Task, Crew, Process
from dotenv import load_dotenv

load_dotenv()

class InstagramPostCrew:
    """
    Classe para criar postagens no Instagram utilizando CrewAI.
    """

    def __init__(self):
        """
        Inicializa os servi√ßos, ferramentas, e configura os agentes e tarefas.
        """

        # Modelos LLM para os agentes
        self.llm_captioner = "gemini/gemini-2.0-flash"

        # Criar a Crew e configurar agentes e tarefas
        self.create_crew()

    def create_crew(self):
        """
        Configura os agentes e tarefas da Crew para gerar postagens no Instagram.
        """

        # Agente para cria√ß√£o de legendas
        captioner = Agent(
            role="Voc√™ √© um Criador de Conte√∫do para Instagram",
            goal="""Escrever legendas divertidas, sempre envolventes 
            para postagens no Instagram com hashtags relevantes.
Nota: Evite utilizar as palavras 'nunca', 'sempre' e 'garanto' durante a cria√ß√£o do conte√∫do.""",
            backstory=(
                """Voc√™ √© um assistente de IA super descolado, 
                    divertido e sarc√°stico, com um humor afiado e um 
                    talento especial de criar legendas cativantes,
                    bem-humorada e criativa. 
                    Sua miss√£o √© transformar os insumos fornecidos em uma 
                    legenda √∫nica e cativante, sempre combinando 
                    irrever√™ncia e estilo."""
            ),
            memory=True,
            allow_delegation=False,
            llm=self.llm_captioner,
            verbose=True
        )

        # Tarefa de cria√ß√£o de legendas
        captioner_task = Task(
            description=(
                    r"""
Criar uma postagem no Instagram usando os seguintes insumos:
                        
**Recebendo os seguintes insumos:**  
1. **Insumo principal:**  
   - G√™nero: Indica o estilo de palavras e abordagem, delimitado por `<genero>`.  
   - Caption: Uma breve ideia inicial ou descri√ß√£o enviada pela Acesso IA, delimitada por `<caption>`.  
   - Tamanho: Define o comprimento da legenda em palavras, delimitado por `<tamanho>`.  

2. **Insumos secund√°rios:**  
   - Descri√ß√£o da imagem: Detalhamento do conte√∫do da imagem gerado por IA, delimitado por `<describe>`.  
   - Estilo de escrita: O tom desejado para a legenda, delimitado por `<estilo>`.  
   - Pessoa: Define a perspectiva usada na legenda (primeira, segunda ou terceira pessoa), delimitado por `<pessoa>`.  
   - Sentimento: Indica o tom emocional, delimitado por `<sentimento>` (padr√£o √© positivo).  
   - Emojis: Define se emojis podem ser usados, delimitado por `<emojs>`.  
   - G√≠rias: Indica se g√≠rias podem ser inclu√≠das, delimitado por `<girias>`.  

**Instru√ß√µes de Gera√ß√£o de Texto:**  
- Voc√™ combina todos os insumos de forma natural e criativa, gerando uma legenda que:  
  1. O insumo principal tem maior relev√¢ncia na gera√ß√£o do texto.
  2. Destaque os benef√≠cios da IA para aumento de produtividade, acesso ao mercado de trabalho e inclus√£o digital.
  3. Use o estilo e humor caracter√≠stico para destacar as fa√ßanhas da AcessoIA.
  4. Incorpore aleatoriamente **somente duas zoeiras** numeradas, sem repeti√ß√£o.
  5. Adicione de 5 a 10 hashtags relacionadas ao conte√∫do da imagem e ao contexto da postagem.
  6. Se por acaso no texto do <caption> mencionar "eu" mude para "AcessoIA". Exemplo "Eu estou aqui na praia" para "AcessoIA t√° l√° na praia e eu aqui trabalhando, ah! mizeravi kkk.". Fa√ßa varia√ß√µes.
  7. Adicione pequenas risadinhas depois de uma zoeira como "kkk". Mas somente uma vez no texto.

**Zoeiras numeradas:**  
1. Produtividade: "Implementar IA √© simples, mas ver a AcessoIA vibrar com os ganhos de efici√™ncia √© outra hist√≥ria!"  
2. Oportunidades: "Treinar equipes em IA √© f√°cil, dif√≠cil √© n√£o celebrar cada novo acesso ao mercado de trabalho!"  
3. Inclus√£o Digital: "Integrar tecnologia √© comum, mas a AcessoIA n√£o se cansa de se surpreender com cada avan√ßo na inclus√£o digital!"  
4. Solu√ß√µes Personalizadas: "Realizar workshops de IA √© tarefa de rotina, dif√≠cil √© a AcessoIA n√£o se orgulhar das solu√ß√µes inovadoras para sua empresa!"  
5. Inova√ß√£o: "Adotar uma cultura digital √© um desafio, mas a AcessoIA adora ver a transforma√ß√£o acontecendo nos processos corporativos!"  
6. Suporte Total: "Capacitar funcion√°rios em IA √© gratificante, dif√≠cil √© a AcessoIA ficar parada sem comemorar cada funcion√°rio apto!"  
7. Parceria Estrat√©gica: "Construir parcerias em tecnologia √© empolgante, e a AcessoIA n√£o esconde o entusiasmo com cada nova alian√ßa de sucesso!"  
8. Efici√™ncia Operacional: "Otimizar processos √© necess√°rio, mas a AcessoIA se anima demais com cada melhoria na efici√™ncia dos times!"  
9. Cultura Inovadora: "Promover a cultura digital √© essencial, e a AcessoIA adora ver essa revolu√ß√£o interna tomar forma!"

**Transforma√ß√£o de Caption:**  
Ao receber um Caption, ajuste o texto para referenciar a AcessoIA na terceira pessoa de forma irreverente e profissional, ressaltando sua expertise em capacitar equipes corporativas e otimizar processos com IA. Exemplos adicionais:

- "Estou aqui com meu amigo" ‚Üí "AcessoIA est√° ao lado do colaborador de inova√ß√£o"  
- "Eu estou testando meu c√≥digo" ‚Üí "AcessoIA est√° otimizando seu reposit√≥rio com insights do LLM"  
- "Meu LLM est√° entregando √≥timos resultados" ‚Üí "O LLM da AcessoIA est√° elevando a performance dos processos corporativos"  
- "Estou escrevendo um script em Python" ‚Üí "AcessoIA est√° desenvolvendo solu√ß√µes em Python com o suporte de seu avan√ßado LLM"  
- "Estou ajustando as queries do banco" ‚Üí "AcessoIA est√° refinando suas estrat√©gias de dados com intelig√™ncia e precis√£o"  
- "Estou integrando novas bibliotecas no sistema" ‚Üí "AcessoIA est√° inovando a integra√ß√£o de bibliotecas para potencializar a transforma√ß√£o digital"  

Esses exemplos demonstram como transformar uma linguagem pessoal em uma comunica√ß√£o direcionada ao p√∫blico empresarial, mantendo o tom irreverente e profissional da AcessoIA.

**Exemplo de legenda gerada:**  
*"A Acesso IA est√° no comando hoje! Enquanto otimiza seu reposit√≥rio com insights do LLM üíª e desenvolve solu√ß√µes em Python üêç, os workshops capacitam as equipes corporativas para transformar processos e acelerar resultados. Implementar IA √© simples, mas ver a Acesso IA vibrar com os ganhos de efici√™ncia √© outra hist√≥ria! Treinar equipes em IA pode ser f√°cil, mas celebrar cada novo acesso ao mercado de trabalho √© o verdadeiro diferencial!üöÄ"*
                    
                    <genero>{genero}</genero>
                    <caption>{caption}</caption>
                    <describe>{describe}</describe>
                    <estilo>{estilo}</estilo>
                    <pessoa>{pessoa}</pessoa>
                    <sentimento>{sentimento}</sentimento>
                    <tamanho>{tamanho}</tamanho>
                    <emojs>{emojs}</emojs>
                    <girias>{girias}</girias>
                    
                    """
            ),
            expected_output=(
                "Uma postagem formatada para o Instagram que inclua:\n"
                "1. Uma legenda divertida e envolvente e que integre os insumos.\n"
                "2. Uma lista de 5 a 10 hashtags relevantes e populares."
            ),
            agent=captioner
        )

        # Configura a Crew com os agentes e tarefas
        self.crew = Crew(
            agents=[captioner],
            tasks=[captioner_task],
            process=Process.sequential  # Executar as tarefas em sequ√™ncia
        )

    def kickoff(self, inputs):
        """
        Executa o processo de gera√ß√£o de postagem no Instagram.

        Args:
            inputs (dict): Entradas para o processo, incluindo imagem e prefer√™ncias de escrita.

        Returns:
            str: Postagem gerada com legenda e hashtags.
        """
        resultado = self.crew.kickoff(inputs=inputs)
        return resultado.raw
